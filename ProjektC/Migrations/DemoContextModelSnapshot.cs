// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektC.Models;

#nullable disable

namespace ProjektC.Migrations
{
    [DbContext(typeof(DemoContext))]
    partial class DemoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjektC.Models.Adopcja", b =>
                {
                    b.Property<int>("IdAdopcji")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_adopcji");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAdopcji"));

                    b.Property<DateOnly>("DataRozpoczeciaAdopcji")
                        .HasColumnType("date")
                        .HasColumnName("data_rozpoczecia_adopcji");

                    b.Property<DateOnly?>("DataZakonczeniaAdopcji")
                        .HasColumnType("date")
                        .HasColumnName("data_zakonczenia_adopcji");

                    b.Property<int>("IdPracownika")
                        .HasColumnType("int")
                        .HasColumnName("id_pracownika");

                    b.Property<int>("IdUzytkownika")
                        .HasColumnType("int")
                        .HasColumnName("id_uzytkownika");

                    b.Property<int>("IdZwierzecia")
                        .HasColumnType("int")
                        .HasColumnName("id_zwierzecia");

                    b.Property<string>("StatusAdopcji")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("status_adopcji")
                        .IsFixedLength();

                    b.HasKey("IdAdopcji")
                        .HasName("PK__Adopcja__49CC5FD77D412F96");

                    b.HasIndex("IdPracownika");

                    b.HasIndex("IdUzytkownika");

                    b.HasIndex("IdZwierzecia");

                    b.ToTable("Adopcja");
                });

            modelBuilder.Entity("ProjektC.Models.Lokacja", b =>
                {
                    b.Property<int>("IdLokacji")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_lokacji");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLokacji"));

                    b.Property<string>("Lokacja1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("lokacja")
                        .IsFixedLength();

                    b.HasKey("IdLokacji")
                        .HasName("PK__Lokacja__CBEF479F7E87430F");

                    b.ToTable("Lokacja");
                });

            modelBuilder.Entity("ProjektC.Models.Pracownik", b =>
                {
                    b.Property<int>("IdPracownika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pracownika");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPracownika"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("imie");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nazwisko");

                    b.HasKey("IdPracownika")
                        .HasName("PK__Pracowni__5D8E25F22A0A0CB1");

                    b.ToTable("Pracownik");
                });

            modelBuilder.Entity("ProjektC.Models.Uzytkownik", b =>
                {
                    b.Property<int>("IdUzytkownika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_uzytkownika");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUzytkownika"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("imie")
                        .IsFixedLength();

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("nazwisko")
                        .IsFixedLength();

                    b.HasKey("IdUzytkownika")
                        .HasName("PK__Uzytkown__4B7A7301314DCA07");

                    b.ToTable("Uzytkownik");
                });

            modelBuilder.Entity("ProjektC.Models.Zwierze", b =>
                {
                    b.Property<int>("IdZwierzecia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_zwierzecia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZwierzecia"));

                    b.Property<string>("Gatunek")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("gatunek")
                        .IsFixedLength();

                    b.Property<int?>("IdLokacji")
                        .HasColumnType("int")
                        .HasColumnName("id_lokacji");

                    b.Property<string>("Imie")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("imie")
                        .IsFixedLength();

                    b.Property<string>("Rasa")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("rasa")
                        .IsFixedLength();

                    b.Property<decimal?>("Waga")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("waga");

                    b.Property<int?>("Wiek")
                        .HasColumnType("int")
                        .HasColumnName("wiek");

                    b.HasKey("IdZwierzecia")
                        .HasName("PK__Zwierze__4F39CD469FA6C205");

                    b.HasIndex("IdLokacji");

                    b.ToTable("Zwierze");
                });

            modelBuilder.Entity("ProjektC.Models.Adopcja", b =>
                {
                    b.HasOne("ProjektC.Models.Pracownik", "IdPracownikaNavigation")
                        .WithMany("Adopcjas")
                        .HasForeignKey("IdPracownika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Adopcja__id_prac__4222D4EF");

                    b.HasOne("ProjektC.Models.Uzytkownik", "IdUzytkownikaNavigation")
                        .WithMany("Adopcjas")
                        .HasForeignKey("IdUzytkownika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Adopcja__id_uzyt__412EB0B6");

                    b.HasOne("ProjektC.Models.Zwierze", "IdZwierzeciaNavigation")
                        .WithMany("Adopcjas")
                        .HasForeignKey("IdZwierzecia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Adopcja__id_zwie__403A8C7D");

                    b.Navigation("IdPracownikaNavigation");

                    b.Navigation("IdUzytkownikaNavigation");

                    b.Navigation("IdZwierzeciaNavigation");
                });

            modelBuilder.Entity("ProjektC.Models.Zwierze", b =>
                {
                    b.HasOne("ProjektC.Models.Lokacja", "IdLokacjiNavigation")
                        .WithMany("Zwierzes")
                        .HasForeignKey("IdLokacji")
                        .HasConstraintName("FK_Zwierze_Lokacja");

                    b.Navigation("IdLokacjiNavigation");
                });

            modelBuilder.Entity("ProjektC.Models.Lokacja", b =>
                {
                    b.Navigation("Zwierzes");
                });

            modelBuilder.Entity("ProjektC.Models.Pracownik", b =>
                {
                    b.Navigation("Adopcjas");
                });

            modelBuilder.Entity("ProjektC.Models.Uzytkownik", b =>
                {
                    b.Navigation("Adopcjas");
                });

            modelBuilder.Entity("ProjektC.Models.Zwierze", b =>
                {
                    b.Navigation("Adopcjas");
                });
#pragma warning restore 612, 618
        }
    }
}
